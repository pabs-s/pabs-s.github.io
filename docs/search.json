[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/nba-draft-grades/index.html",
    "href": "posts/nba-draft-grades/index.html",
    "title": "First Post",
    "section": "",
    "text": "This is my first post to this site. Here’s some pseudo-code:\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nattendance &lt;- read.csv(\"https://dwillis.github.io/sports-data-files/attendance.csv\")"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "suarezsportsblog",
    "section": "",
    "text": "The Lions, The Terps and the Workhorse Offenses of Big Ten Football\n\n\n\n\n\n\ncollegefootball\n\n\nbigten\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nOct 8, 2024\n\n\nPablo Suarez\n\n\n\n\n\n\n\n\n\n\n\n\nFirst Post\n\n\n\n\n\n\nlowercaseword\n\n\nlowercaseword\n\n\nlowercaseword\n\n\n\n\n\n\n\n\n\nOct 3, 2024\n\n\nPablo Suarez\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nOct 1, 2024\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nSep 28, 2024\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/big-ten-avg-plays/index.html",
    "href": "posts/big-ten-avg-plays/index.html",
    "title": "The Lions, The Terps and the Workhorse Offenses of Big Ten Football",
    "section": "",
    "text": "Contrary to the headline, this is not a long-awaited eighth installment in the Chronicles of Narnia series. However, it is a story that audiences might find equally compelling—seeing which Big Ten offenses ran the highest average number of plays per game in the 2023 season and who is setting the tone this year.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\n\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\n\n\nCode\nfblogs23 &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/footballlogs23.csv\")\n\n\nRows: 1702 Columns: 54\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): HomeAway, Opponent, Result, TeamFull, TeamURL, Outcome, Team, Con...\ndbl  (45): Game, PassingCmp, PassingAtt, PassingPct, PassingYds, PassingTD, ...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nfblogs24 &lt;- read.csv(\"https://dwillis.github.io/sports-data-files/footballlogs24.csv\")\n\n\nLooking back to last year, there was virtually a three-way tie at the top of the Big Ten with the Penn State Nittany Lions leading Purdue and Wisconsin by the finest of margins. All three schools ran an average of 71 offensive plays per game. The next closest school, Illinois, ran nearly four fewer offensive plays per game across the same span.\nUnsurprisingly, the prolific punting Iowa Hawkeyes earned the lowest marks in this metric. However, this isn’t necessarily an indicator for success nor does it spell doom for teams lagging behind. Consider the fact that the national champion Michigan Wolverines, who ran roughly 61 plays per game, were only two spots ahead of the Hawkeyes. If an offense can be efficient and control the tempo of the game or a team can rely on a staunch defense to carry them, why bother running more plays at all? Food for thought.\n\n\nCode\nbigtenplays23 &lt;- fblogs23 |&gt;\n  filter(Conference == \"Big Ten Conference\") |&gt;\n  group_by(TeamFull) |&gt;\n  summarize(avg_plays = mean(OffensivePlays)) |&gt;\n  arrange(desc(avg_plays))\n\nggplot(data = bigtenplays23, aes(x = reorder(TeamFull, avg_plays), y = avg_plays)) + \n  geom_bar(stat = \"identity\") + \n  scale_y_continuous(labels = comma) + \n  labs(\n    title = \"Nittany Lions Brought the Pace in 2023\", \n    x = \"School\", \n    y = \"Average Offensive Plays Per Game\"\n  ) + \n  theme_minimal() +\n  coord_flip() +\n  theme(axis.text.y = element_text(hjust = 1))\n\n\n\n\n\n\n\n\n\nMuch like the Pevensie kids stepping into the wardrobe, the 2024 Big Ten season sees a few new faces from out West in some very unfamiliar places. Former PAC-12 schools—USC, Oregon, UCLA and Washington—have joined the Big Ten ranks. Of those four schools, USC and Oregon haven’t waited for anyone to roll out the red carpet and already cemented themselves in the top three, averaging 71 and 70 offensive plays per game, respectively, through five games this season.\nThe bigger story here is that we have a new leader, the Maryland Terrapins, who are running an average of over 72 plays per game. Resisting the urge to name drop another classic tale, in this case involving a tortoise, we’ll have to keep an eye on the Terps throughout the year to see how sustainable this high-tempo offense is.\nIn terms of honorable mentions, Rutgers now finds itself in the top five with 68 plays per game, a six-play improvement from last season where it finished with the fourth-lowest amount in the conference. Nebraska and Iowa also deserve a shout as they’ve risen into the middle of the pack.\nFor not-so-honorable mentions, Purdue dropped nearly 18 plays per game and now sits at the bottom of the Big Ten in this metric. To put it in perspective, it’s generating almost six less plays per game than Iowa last year. It’s still early days, and we’d have to compare Iowa’s rate through five games last year to have a better idea of where Purdue actually is, but the West Lafayette side isn’t lighting it up at the moment. We’ll have to see how that story ends.\n\n\nCode\nbigtenplays24 &lt;- fblogs24 |&gt;\n  filter(Conference == \"Big Ten Conference\") |&gt;\n  group_by(TeamFull) |&gt;\n  summarize(avg_plays = mean(OffensivePlays)) |&gt;\n  arrange(desc(avg_plays))\n \nggplot(data = bigtenplays24, aes(x = reorder(TeamFull, avg_plays), y = avg_plays)) + \n  geom_bar(stat = \"identity\") + \n  scale_y_continuous(labels = comma) + \n  labs(\n    title = \"Speedy Terps Rolling with Top Average Off. Plays Per Game\", \n    x = \"School\", \n    y = \"Average Offensive Plays Per Game\"\n  ) + \n  theme_minimal() +\n  coord_flip() +\n  theme(axis.text.y = element_text(hjust = 1))"
  }
]